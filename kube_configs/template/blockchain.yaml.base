#---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  name: shared
#  annotations:
#    #ibmc-file-bronze: 2 IOPS per GB.
#    #ibmc-file-silver: 4 IOPS per GB.
#    #ibmc-file-gold: 10 IOPS per GB.
#    volume.beta.kubernetes.io/storage-class: "ibmc-file-silver"
#spec:
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: utils
spec:
  restartPolicy: "Never"
  volumes: 
  - name: shared
    hostPath:
      path: /tmp
  - name: dockersocket
    hostPath:
      path: /var/run/docker.sock
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
        
  containers:
  - name: utils
    image: marshall628/fabric_utils:x86_64-0.1.1
    imagePullPolicy: Always
    command: ["/utils/bootstrap.sh  && while [ 1 ]; do sleep 100; done;"]
    env:
    - name: PEERHOST1
      value: %PRIVATEIP%
    - name: PEERPORT1
      value: "31020"
    - name: PEERHOST2
      value: %PRIVATEIP%
    - name: PEERPORT2
      value: "31030"
    - name: ORDERER_URL
      value: %PRIVATEIP%:31010
    - name: PEER_CFG_PATH
      value: /utils
    - name: DOCKER_HOST
      value: unix:///host/var/run/docker.sock
    volumeMounts:
    - mountPath: /shared
      name: shared
    - mountPath: /host/var/run/docker.sock
      name: dockersocket

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: orderer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: orderer
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
                    
      containers:
      - name: orderer
        image: hyperledger/fabric-orderer:x86_64-1.1.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; orderer || true && while [ 1 ]; do sleep 100; done;"]
        env:
        - name: ORDERER_CFG_PATH
          value: /shared/utils/
        - name: ORDERER_GENERAL_LEDGERTYPE
          value: file
        - name: ORDERER_FILELEDGER_LOCATION
          value: /mnt/ledger/orderer1
        - name: ORDERER_GENERAL_BATCHTIMEOUT
          value: 1s
        - name: ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT
          value: "10"
        - name: ORDERER_GENERAL_MAXWINDOWSIZE
          value: "1000"
        - name: ORDERER_GENERAL_ORDERERTYPE
          value: solo
        - name: ORDERER_GENERAL_LISTENADDRESS
          value: 0.0.0.0
        - name: ORDERER_GENERAL_LISTENPORT
          value: "1004"
        - name: ORDERER_GENERAL_LOGLEVEL
          value: debug
        - name: ORDERER_KAFKA_BROKERS
          value: "[kafka-0a:1003,kafka-0b:2003,kafka-0c:3003]"
        - name: ORDERER_GENERAL_LOCALMSPDIR
          value: /shared/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/
        - name: ORDERER_GENERAL_LOCALMSPID
          value: OrdererMSP
        - name: ORDERER_GENERAL_GENESISMETHOD
          value: file
        - name: ORDERER_GENERAL_GENESISFILE
          value: /shared/orderer.block
        - name: ORDERER_GENERAL_GENESISPROFILE
          value: initial
        - name: ORDERER_GENERAL_TLS_ENABLED
          value: "false"
        - name: ORDERER_GENERAL_TLS_PRIVATEKEY
          value: /certs/orderer0a-key.pem
        - name: ORDERER_GENERAL_TLS_CERTIFICATE
          value: /certs/orderer0a-cert.pem
        - name: ORDERER_GENERAL_TLS_ROOTCAS
          value: "[/certs/cacert.pem]"
        volumeMounts:
        - mountPath: /shared
          name: shared
    
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: capeerorg1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: capeerorg1
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers:
      - name: capeerorg1
        image: hyperledger/fabric-ca:x86_64-1.1.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; fabric-ca-server start -c ${CONFIGYAML} --db.datasource /tmp/ca-peerOrg1.db"]
        env:
        - name: CONFIGYAML
          value: /shared/cas/org1/ca.yaml
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/peerOrg1/ca/peerOrg1-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/peerOrg1/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        volumeMounts:
        - mountPath: /shared
          name: shared

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: capeerorg2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: capeerorg2
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers: 
      - name: capeerorg2
        image: hyperledger/fabric-ca:x86_64-1.1.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; fabric-ca-server start -c ${CONFIGYAML}  --db.datasource /tmp/ca-peerOrg2.db"]
        env:
        - name: CONFIGYAML
          value: /shared/cas/org2/ca.yaml
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/peerOrganizations/peerOrg2/ca/peerOrg2-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/peerOrganizations/peerOrg2/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        volumeMounts:
        - mountPath: /shared
          name: shared

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: caorderer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: caorderer
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers:
      - name: caorderer
        image: hyperledger/fabric-ca:x86_64-1.1.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; fabric-ca-server start -c ${CONFIGYAML}  --db.datasource /tmp/ca-ordererOrg.db"]
        env:
        - name: CONFIGYAML
          value: /shared/cas/ca.yaml
        - name: FABRIC_CA_SERVER_CA_CERTFILE
          value: /shared/crypto-config/ordererOrganizations/ordererOrg1/ca/ordererOrg1-cert.pem
        - name: FABRIC_CA_SERVER_CA_KEYFILE
          value: /shared/crypto-config/ordererOrganizations/ordererOrg1/ca/key.pem
        - name: FABRIC_CA_SERVER_DEBUG
          value: "true"
        - name: FABRIC_CA_SERVER_TLS_ENABLED
          value: "false"
        - name: FABRIC_CA_SERVER_TLS_CERTFILE
          value: /certs/ca0a-cert.pem
        - name: FABRIC_CA_SERVER_TLS_KEYFILE
          value: /certs/ca0a-key.pem
        volumeMounts:
        - mountPath: /shared
          name: shared

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: org1peer1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: org1peer1
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers:
      - name: org1peer1
        image: hyperledger/fabric-peer:x86_64-1.0.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done; peer node start --peer-defaultchain=false || true &&  while [ 1 ]; do sleep 100; done;"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "false"
        - name: CORE_PEER_NETWORKID
          value: nid1
        - name: CORE_PEER_ADDRESS
          value: %PRIVATEIP%:31020
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:5010
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:5011
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: %PRIVATEIP%:31020
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "true"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_DISCOVERY_PERIOD
          value: 60s
        - name: CORE_PEER_DISCOVERY_TOUCHPERIOD
          value: 60s
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
#        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
#          value: net_blockchain.com
        - name: CORE_PEER_LOCALMSPID
          value: Org1MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/
        - name: CORE_LOGGING_LEVEL
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: info
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
#        - name: CORE_PEER_TLS_CERT_FILE
#          value: /certs/peer1a-cert.pem
#        - name: CORE_PEER_TLS_KEY_FILE
#          value: /certs/peer1a-key.pem
#        - name: CORE_PEER_TLS_ROOTCERT_FILE
#          value: /certs/cacert.pem
#        - name: CORE_PEER_TLS_SERVERHOSTOVERRIDE
#          value: org1peer1
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
#        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
#          value: localhost:5984
#        - name: COUCHDB_USER
#          value: peer1a
#        - name: COUCHDB_PASSWORD
#          value: pass1a
#        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
#          value: peer1a
#        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
#          value: pass1a
#        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP
#          value: "20"
        - name: PEER_CFG_PATH
          value: /shared/utils/
        - name: FABRIC_CFG_PATH
          value: /shared/utils/
        - name: CHANNEL_NAME
          value: "channel1"
        - name: ORDERER_URL
          value: %PRIVATEIP%:31010
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /host/var/run/docker.sock
          name: dockersocket
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: org2peer1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: org2peer1
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers:
      - name: org2peer1
        image: hyperledger/fabric-peer:x86_64-1.0.0-alpha
        command: ["sh", "-c", "sleep 1 && while [ ! -f /shared/bootstrapped ]; do echo Waiting for bootstrap; sleep 1; done;  peer node start --peer-defaultchain=false"]
        env:
        - name: CORE_PEER_ADDRESSAUTODETECT
          value: "false"
        - name: CORE_PEER_NETWORKID
          value: nid1
        - name: CORE_PEER_ADDRESS
          value: %PRIVATEIP%:31030
        - name: CORE_PEER_LISTENADDRESS
          value: 0.0.0.0:6010
        - name: CORE_PEER_EVENTS_ADDRESS
          value: 0.0.0.0:6011
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: %PRIVATEIP%:31030
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "true"
        - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
          value: "true"
        - name: CORE_PEER_COMMITTER_ENABLED
          value: "true"
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_DISCOVERY_PERIOD
          value: 60s
        - name: CORE_PEER_DISCOVERY_TOUCHPERIOD
          value: 60s
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
#        - name: CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE
#          value: net_blockchain.com
        - name: CORE_PEER_LOCALMSPID
          value: Org2MSP
        - name: CORE_PEER_MSPCONFIGPATH
          value: /shared/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/
        - name: CORE_LOGGING_LEVEL
          value: debug
        - name: CORE_LOGGING_PEER
          value: debug
        - name: CORE_LOGGING_CAUTHDSL
          value: debug
        - name: CORE_LOGGING_GOSSIP
          value: debug
        - name: CORE_LOGGING_LEDGER
          value: debug
        - name: CORE_LOGGING_MSP
          value: debug
        - name: CORE_LOGGING_POLICIES
          value: debug
        - name: CORE_LOGGING_GRPC
          value: debug
        - name: CORE_PEER_ID
          value: org2peer1
        - name: CORE_PEER_TLS_ENABLED
          value: "false"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /certs/peer1a-cert.pem
        - name: CORE_PEER_TLS_KEY_FILE
          value: /certs/peer1a-key.pem
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /certs/cacert.pem
        - name: CORE_PEER_TLS_SERVERHOSTOVERRIDE
          value: org2peer1
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: goleveldb
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
          value: localhost:5984
        - name: COUCHDB_USER
          value: peer1a
        - name: COUCHDB_PASSWORD
          value: pass1a
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
          value: peer1a
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
          value: pass1a
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP
          value: "20"
        - name: PEER_CFG_PATH
          value: /shared/utils/
        - name: FABRIC_CFG_PATH
          value: /shared/utils/
        - name: CHANNEL_NAME
          value: "channel1"
        - name: ORDERER_URL
          value: %PRIVATEIP%:31010
        volumeMounts:
        - mountPath: /shared
          name: shared
        - mountPath: /host/var/run/docker.sock
          name: dockersocket

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: test
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: test
    spec:
      volumes: 
      - name: shared
        hostPath:
          path: /tmp
#      volumes: 
#      - name: shared
#        persistentVolumeClaim:
#          claimName: shared
          
      containers:
      - name: test
        image: nginx

---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-caorderer-service
  labels:
    run: blockchain-caorderer-service
spec:
  type: NodePort
  selector:
    name: caorderer
  ports:
  - protocol: TCP
    port: 7054
    nodePort: 31000
    name: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-capeerorg1-service
  labels:
    run: blockchain-capeerorg1-service
spec:
  type: NodePort
  selector:
    name: capeerorg1
  ports:
  - protocol: TCP
    port: 7054
    nodePort: 31001
    name: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-capeerorg2-service
  labels:
    run: blockchain-capeerorg2-service
spec:
  type: NodePort
  selector:
    name: capeerorg2
  ports:
  - protocol: TCP
    port: 7054
    nodePort: 31002
    name: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-orderer-service
  labels:
    run: blockchain-orderer-service
spec:
  type: NodePort
  selector:
    name: orderer
  ports:
  - protocol: TCP
    port: 1004
    nodePort: 31010
    name: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-org1peer1-service
  labels:
    run: blockchain-org1peer1-service
spec:
  type: NodePort
  selector:
    name: org1peer1
  ports:
  - protocol: TCP
    port: 5010
    nodePort: 31020
    name: grpc
  - protocol: TCP
    port: 5011
    nodePort: 31021
    name: events
---
apiVersion: v1
kind: Service
metadata:
  name: blockchain-org2peer1-service
  labels:
    run: blockchain-org2peer1-service
spec:
  type: NodePort
  selector:
    name: org2peer1
  ports:
  - protocol: TCP
    port: 6010
    nodePort: 31030
    name: grpc
  - protocol: TCP
    port: 6011
    nodePort: 31031
    name: events
